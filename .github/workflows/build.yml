name: Continuous Integration
 
on:
  workflow_dispatch:
jobs:
  build:
    name: ${{ matrix.name }}

    env:
      MAKEJOBS: "-j3"
      CHECK_DOC: "0"
      CCACHE_SIZE: "100M"
      CCACHE_TEMPDIR: /tmp/.ccache-temp
      CCACHE_COMPRESS: "1"
      PYTHON_DEBUG: "1"
      WINEDEBUG: fixme-all
      SDK_URL: https://bitcoincore.org/depends-sources/sdks

    strategy:
      fail-fast: false
      matrix:
        name:
       
          - x86_64-macos
      
        include:
          - name: x86_64-macos
            host: x86_64-apple-darwin11
            os: macos-latest
            packages: cmake brew imagemagick libcap-dev librsvg2-bin libz-dev libtiff-tools libtinfo5 python3-setuptools xorriso libtinfo5 libboost-dev libboost-all-dev libssl-dev libdb++-dev libminiupnpc-dev libleveldb-dev 
            run-tests: false
            dep-opts: ""
            config-opts: "--enable-gui=qt5 --enable-reduce-exports"
            goal: install
            sdk: 10.11

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
            version: 5.12.8
      - name: Add architecture
        if: ${{ matrix.arch }}
        run: |
          sudo dpkg --add-architecture "${{ matrix.arch }}"
      - name: Install packages
        run: |
          
          brew update
          brew install openssl berkeley-db@4 miniupnpc qrencode
          brew upgrade openssl

          brew install boost@1.55 
      - name: Post install
        if: ${{ matrix.postinstall }}
        run: ${{ matrix.postinstall }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install SDK
        if: ${{ matrix.sdk }}
        run: |
          mkdir -p ./depends/sdk-sources
          mkdir -p ./depends/SDKs
          curl --location --fail $SDK_URL/MacOSX${{ matrix.sdk }}.sdk.tar.gz -o depends/sdk-sources/MacOSX${{ matrix.sdk }}.sdk.tar.gz
          tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${{ matrix.sdk }}.sdk.tar.gz
      - name: QMake
        run: qmake -config release litedoge-qt.pro "USE_UPNP=1" "USE_QRCODE=1" "RELEASE=1" 
      - name: Make
        run: make -f Makefile && ls-a
      - name: Upload Files to a GitHub Release (mac)
        if: ${{ matrix.host == 'x86_64-apple-darwin11' }}
        id: create_releasemac
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.mysecret }}
        with:
          tag_name: ${{matrix.host}}v7
          release_name: Release v7
          draft: false
          prerelease: false   
      - name: Upload Files to a GitHub Release (mac)
        if: ${{ matrix.host == 'x86_64-apple-darwin11' }}
        id: upload-release-assetMAC
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.mysecret }}
        with:
          upload_url: ${{ steps.create_releasemac.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_name: litedoge-qt
          asset_path: ./litedoge-qt
          asset_content_type: application/zip
